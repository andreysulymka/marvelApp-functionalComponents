{"version":3,"file":"static/js/772.2a623031.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/pages/SinglePage.js","hooks/http.hooks.js","services/MarvelService.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import \"./appBanner.scss\";\nimport avengers from \"../../resources/img/Avengers.png\";\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return <img style={{\r\n        display: 'block', width: '250px', height: '250px',\r\n    objectFit: 'contain', margin: '0 auto'}} src={img} alt='error message' />;\r\n};\r\n\r\nexport default ErrorMessage","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport useMarvelService from \"../../services/MarvelService\";\r\nimport setContent from \"../../utils/setContent\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n  const { id } = useParams();\r\n  const [data, setData] = useState(null);\r\n  const { getComic, getCharacter, clearError, process, setProcess } =\r\n    useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateData();\r\n    // eslint-disable-next-line\r\n  }, [id]);\r\n\r\n  const updateData = () => {\r\n    clearError();\r\n\r\n    switch (dataType) {\r\n      case \"comic\":\r\n        getComic(id)\r\n          .then(onDataLoaded)\r\n          .then(() => setProcess(\"confirmed\"));\r\n        break;\r\n      case \"character\":\r\n        getCharacter(id)\r\n          .then(onDataLoaded)\r\n          .then(() => setProcess(\"confirmed\"));\r\n        break;\r\n      default:\r\n        throw new Error(\"Unexpected case\");\r\n    }\r\n  };\r\n\r\n  const onDataLoaded = (data) => {\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {setContent(process, Component, data)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SinglePage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      \r\n      setProcess(\"loading\");\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        \r\n        return data;\r\n      } catch (e) {\r\n        \r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    \r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import { useHttp } from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n  const {  request, clearError, process, setProcess } =\r\n    useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=1a829f32205e74795c839fd08a9bcba7\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n    process,\r\n    setProcess\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from \"../components/Spinner/Spinner\";\r\nimport ErrorMessage from \"../components/errorMessage/ErrorMessage\";\r\nimport Skeleton from \"../components/skeleton/Skeleton\";\r\n\r\nconst setContent = (process, Component, data) => {\r\n  switch (process) {\r\n    case \"waiting\":\r\n      return <Skeleton />;\r\n    case \"loading\":\r\n      return <Spinner />;\r\n    case \"confirmed\":\r\n      return <Component data={data} />;\r\n    case \"error\":\r\n      return <ErrorMessage />;\r\n    default:\r\n      throw new Error(\"Unexpected default state\");\r\n  }\r\n};\r\n\r\nexport default setContent;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","_ref","Component","dataType","id","useParams","data","setData","useState","getComic","getCharacter","clearError","process","setProcess","useMarvelService","useEffect","updateData","then","onDataLoaded","Error","_Fragment","setContent","request","useHttp","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","concat","status","json","e","_apiBase","_apiKey","_transformCharacter","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComics","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","results","map","getCharacterByName","res","getAllComics","Skeleton","Spinner"],"sourceRoot":""}