{"version":3,"file":"static/js/682.ea454551.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hooks.js","services/MarvelService.js"],"sourcesContent":["import \"./appBanner.scss\";\nimport avengers from \"../../resources/img/Avengers.png\";\nimport avengersLogo from \"../../resources/img/Avengers_logo.png\";\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport default AppBanner;\n","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n    return <img style={{\r\n        display: 'block', width: '250px', height: '250px',\r\n    objectFit: 'contain', margin: '0 auto'}} src={img} alt='error message' />;\r\n};\r\n\r\nexport default ErrorMessage","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../Spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected default state\");\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setnewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { getAllComics, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n    // eslint-disable-next-line\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setnewItemLoading(false) : setnewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setnewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import {Helmet} from 'react-helmet'\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta name=\"description\"\r\n                content=\"Page with list of our comics\" />\r\n          <title>Comics page</title>\r\n        </Helmet>\r\n        <AppBanner />\r\n        <ComicsList />\r\n      </>\r\n    );\r\n}\r\n\r\nexport default ComicsPage","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState(\"waiting\");\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = \"GET\",\r\n      body = null,\r\n      headers = { \"Content-Type\": \"application/json\" }\r\n    ) => {\r\n      \r\n      setProcess(\"loading\");\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n\r\n        \r\n        return data;\r\n      } catch (e) {\r\n        \r\n        setProcess(\"error\");\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    \r\n    setProcess(\"loading\");\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n};\r\n","import { useHttp } from \"../hooks/http.hooks\";\r\n\r\nconst useMarvelService = () => {\r\n  const {  request, clearError, process, setProcess } =\r\n    useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=1a829f32205e74795c839fd08a9bcba7\";\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: char.thumbnail.path + \".\" + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || \"There is no description\",\r\n      pageCount: comics.pageCount\r\n        ? `${comics.pageCount} p.`\r\n        : \"No information about the number of pages\",\r\n      thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n      language: comics.textObjects[0]?.language || \"en-us\",\r\n      // optional chaining operator\r\n      price: comics.prices[0].price\r\n        ? `${comics.prices[0].price}$`\r\n        : \"not available\",\r\n    };\r\n  };\r\n\r\n  return {\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    clearError,\r\n    getAllComics,\r\n    getComic,\r\n    process,\r\n    setProcess\r\n  };\r\n};\r\n\r\nexport default useMarvelService;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","Error","ComicsList","comicsList","setComicsList","useState","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","items","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_transformCharacter","char","description","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","data","results","getCharacterByName","getCharacter","res","getComic"],"sourceRoot":""}